

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri May 21 18:59:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.30
    20                           ; Generated 15/09/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F15244 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  009E                     	;# 
    81  009F                     	;# 
    82  010C                     	;# 
    83  010D                     	;# 
    84  0119                     	;# 
    85  011A                     	;# 
    86  011B                     	;# 
    87  011B                     	;# 
    88  011C                     	;# 
    89  011D                     	;# 
    90  011E                     	;# 
    91  011F                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  018E                     	;# 
    95  018F                     	;# 
    96  0190                     	;# 
    97  0191                     	;# 
    98  0192                     	;# 
    99  020C                     	;# 
   100  020D                     	;# 
   101  020E                     	;# 
   102  020E                     	;# 
   103  020F                     	;# 
   104  020F                     	;# 
   105  0210                     	;# 
   106  0210                     	;# 
   107  0211                     	;# 
   108  0211                     	;# 
   109  028C                     	;# 
   110  028C                     	;# 
   111  028D                     	;# 
   112  028D                     	;# 
   113  028E                     	;# 
   114  028F                     	;# 
   115  0290                     	;# 
   116  0291                     	;# 
   117  030C                     	;# 
   118  030C                     	;# 
   119  030D                     	;# 
   120  030E                     	;# 
   121  030F                     	;# 
   122  0310                     	;# 
   123  0310                     	;# 
   124  0311                     	;# 
   125  0312                     	;# 
   126  0313                     	;# 
   127  0314                     	;# 
   128  0314                     	;# 
   129  0315                     	;# 
   130  0316                     	;# 
   131  0318                     	;# 
   132  0318                     	;# 
   133  0319                     	;# 
   134  031A                     	;# 
   135  059C                     	;# 
   136  059C                     	;# 
   137  059D                     	;# 
   138  059D                     	;# 
   139  059E                     	;# 
   140  059F                     	;# 
   141  070C                     	;# 
   142  070D                     	;# 
   143  070E                     	;# 
   144  0716                     	;# 
   145  0717                     	;# 
   146  0718                     	;# 
   147  080C                     	;# 
   148  0811                     	;# 
   149  0813                     	;# 
   150  0814                     	;# 
   151  081A                     	;# 
   152  081A                     	;# 
   153  081B                     	;# 
   154  081C                     	;# 
   155  081C                     	;# 
   156  081D                     	;# 
   157  081E                     	;# 
   158  081F                     	;# 
   159  088E                     	;# 
   160  0890                     	;# 
   161  0891                     	;# 
   162  0892                     	;# 
   163  0893                     	;# 
   164  090C                     	;# 
   165  1E8F                     	;# 
   166  1E90                     	;# 
   167  1E91                     	;# 
   168  1E92                     	;# 
   169  1E93                     	;# 
   170  1E9C                     	;# 
   171  1EA1                     	;# 
   172  1EA2                     	;# 
   173  1EC3                     	;# 
   174  1EC5                     	;# 
   175  1EC6                     	;# 
   176  1EC7                     	;# 
   177  1ECB                     	;# 
   178  1ECB                     	;# 
   179  1ECB                     	;# 
   180  1ECC                     	;# 
   181  1ECC                     	;# 
   182  1ECC                     	;# 
   183  1F10                     	;# 
   184  1F11                     	;# 
   185  1F12                     	;# 
   186  1F14                     	;# 
   187  1F15                     	;# 
   188  1F1C                     	;# 
   189  1F1D                     	;# 
   190  1F1E                     	;# 
   191  1F1F                     	;# 
   192  1F20                     	;# 
   193  1F21                     	;# 
   194  1F22                     	;# 
   195  1F23                     	;# 
   196  1F24                     	;# 
   197  1F25                     	;# 
   198  1F26                     	;# 
   199  1F27                     	;# 
   200  1F38                     	;# 
   201  1F39                     	;# 
   202  1F3A                     	;# 
   203  1F3B                     	;# 
   204  1F3C                     	;# 
   205  1F3D                     	;# 
   206  1F3E                     	;# 
   207  1F3F                     	;# 
   208  1F43                     	;# 
   209  1F44                     	;# 
   210  1F45                     	;# 
   211  1F46                     	;# 
   212  1F47                     	;# 
   213  1F48                     	;# 
   214  1F49                     	;# 
   215  1F4A                     	;# 
   216  1F4E                     	;# 
   217  1F4F                     	;# 
   218  1F50                     	;# 
   219  1F51                     	;# 
   220  1F52                     	;# 
   221  1F53                     	;# 
   222  1F54                     	;# 
   223  1F55                     	;# 
   224  1FE4                     	;# 
   225  1FE5                     	;# 
   226  1FE6                     	;# 
   227  1FE7                     	;# 
   228  1FE8                     	;# 
   229  1FE8                     	;# 
   230  1FE9                     	;# 
   231  1FEA                     	;# 
   232  1FEB                     	;# 
   233  1FED                     	;# 
   234  1FEE                     	;# 
   235  1FEF                     	;# 
   236                           
   237                           	psect	idataCOMMON
   238  06FB                     __pidataCOMMON:
   239                           
   240                           ;initializer for _dutyCycle100
   241  06FB  34F4               	retlw	244
   242  06FC  3401               	retlw	1
   243                           
   244                           ;initializer for _dutyCycle75
   245  06FD  3477               	retlw	119
   246  06FE  3401               	retlw	1
   247                           
   248                           ;initializer for _dutyCycle50
   249  06FF  34FA               	retlw	250
   250  0700  3400               	retlw	0
   251                           
   252                           ;initializer for _dutyCycle25
   253  0701  347D               	retlw	125
   254  0702  3400               	retlw	0
   255  0014                     _TRISC	set	20
   256  0013                     _TRISB	set	19
   257  0012                     _TRISA	set	18
   258  001A                     _LATC	set	26
   259  0019                     _LATB	set	25
   260  0018                     _LATA	set	24
   261  006F                     _RB7	set	111
   262  006D                     _RB5	set	109
   263  0072                     _RC2	set	114
   264  0062                     _RA2	set	98
   265  0065                     _RA5	set	101
   266  006C                     _RB4	set	108
   267  0070                     _RC0	set	112
   268  0071                     _RC1	set	113
   269  009E                     _TRISB6	set	158
   270  009C                     _TRISB4	set	156
   271  00A7                     _TRISC7	set	167
   272  00A6                     _TRISC6	set	166
   273  00A5                     _TRISC5	set	165
   274  00A4                     _TRISC4	set	164
   275  00A1                     _TRISC1	set	161
   276  00A0                     _TRISC0	set	160
   277  009F                     _TRISB7	set	159
   278  009D                     _TRISB5	set	157
   279  00A2                     _TRISC2	set	162
   280  0095                     _TRISA5	set	149
   281  0094                     _TRISA4	set	148
   282  0092                     _TRISA2	set	146
   283  00A3                     _TRISC3	set	163
   284  0091                     _TRISA1	set	145
   285  028E                     _T2CON	set	654
   286  028C                     _T2TMR	set	652
   287  028D                     _T2PR	set	653
   288  0291                     _T2RST	set	657
   289  028F                     _T2HLT	set	655
   290  0290                     _T2CLKCON	set	656
   291  0314                     _PWM3DCL	set	788
   292  0315                     _PWM3DCH	set	789
   293  0316                     _PWM3CON	set	790
   294  070D                     _PIR1bits	set	1805
   295  0892                     _OSCTUNE	set	2194
   296  0893                     _OSCFRQ	set	2195
   297  0891                     _OSCEN	set	2193
   298  1F23                     _RC3PPS	set	7971
   299  1F11                     _RA1PPS	set	7953
   300  1F52                     _INLVLC	set	8018
   301  1F47                     _INLVLB	set	8007
   302  1F3C                     _INLVLA	set	7996
   303  1F51                     _SLRCONC	set	8017
   304  1F46                     _SLRCONB	set	8006
   305  1F3B                     _SLRCONA	set	7995
   306  1F50                     _ODCONC	set	8016
   307  1F45                     _ODCONB	set	8005
   308  1F3A                     _ODCONA	set	7994
   309  1F4F                     _WPUC	set	8015
   310  1F39                     _WPUA	set	7993
   311  1F44                     _WPUB	set	8004
   312  1F38                     _ANSELA	set	7992
   313  1F43                     _ANSELB	set	8003
   314  1F4E                     _ANSELC	set	8014
   315  FA7A                     _WPUC2	set	64122
   316                           
   317                           	psect	cinit
   318  07EF                     start_initialization:	
   319                           ; #config settings
   320                           
   321  07EF                     __initialization:
   322                           
   323                           ; Initialize objects allocated to COMMON
   324  07EF  30FB               	movlw	low __pidataCOMMON
   325  07F0  0084               	movwf	4
   326  07F1  3086               	movlw	(high __pidataCOMMON)| (0+128)
   327  07F2  0085               	movwf	5
   328  07F3  3070               	movlw	low __pdataCOMMON
   329  07F4  0086               	movwf	6
   330  07F5  3000               	movlw	high __pdataCOMMON
   331  07F6  0087               	movwf	7
   332  07F7  3008               	movlw	8
   333  07F8  3186  26ED  3187   	fcall	init_ram
   334                           
   335                           ; Clear objects allocated to COMMON
   336  07FB  01FC               	clrf	__pbssCOMMON& (0+127)
   337  07FC  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   338  07FD                     end_of_initialization:	
   339                           ;End of C runtime variable initialization code
   340                           
   341  07FD                     __end_of__initialization:
   342  07FD  0140               	movlb	0
   343  07FE  3187  2F64         	ljmp	_main	;jump to C main() function
   344                           
   345                           	psect	bssCOMMON
   346  007C                     __pbssCOMMON:
   347  007C                     _dutyCycle0:
   348  007C                     	ds	2
   349                           
   350                           	psect	dataCOMMON
   351  0070                     __pdataCOMMON:
   352  0070                     _dutyCycle100:
   353  0070                     	ds	2
   354  0072                     _dutyCycle75:
   355  0072                     	ds	2
   356  0074                     _dutyCycle50:
   357  0074                     	ds	2
   358  0076                     _dutyCycle25:
   359  0076                     	ds	2
   360                           
   361                           	psect	inittext
   362  06ED                     init_ram:
   363  06ED  00FE               	movwf	btemp
   364  06EE                     initloop:
   365  06EE  0012               	moviw fsr0++
   366  06EF  001E               	movwi fsr1++
   367  06F0  0BFE               	decfsz	btemp,f
   368  06F1  2EEE               	goto	initloop
   369  06F2  3400               	retlw	0
   370                           
   371                           	psect	cstackCOMMON
   372  0078                     __pcstackCOMMON:
   373  0078                     ?_PIN_MANAGER_Initialize:
   374  0078                     ??_PIN_MANAGER_Initialize:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0078                     ?_OSCILLATOR_Initialize:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0078                     ??_OSCILLATOR_Initialize:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0078                     ?_TMR2_Initialize:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0078                     ??_TMR2_Initialize:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0078                     ?_PWM3_Initialize:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0078                     ??_PWM3_Initialize:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0078                     ?_PWM3_LoadDutyValue:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0078                     ?_main:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0078                     PWM3_LoadDutyValue@dutyValue:	
   402                           ; 1 bytes @ 0x0
   403                           
   404                           
   405                           ; 2 bytes @ 0x0
   406  0078                     	ds	2
   407  007A                     ??_PWM3_LoadDutyValue:
   408                           
   409                           ; 1 bytes @ 0x2
   410  007A                     	ds	2
   411  007C                     ??_main:
   412                           
   413                           	psect	maintext
   414  0764                     __pmaintext:	
   415                           ; 1 bytes @ 0x4
   416 ;;
   417 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   418 ;;
   419 ;; *************** function _main *****************
   420 ;; Defined at:
   421 ;;		line 163 in file "newfile.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2, status,0, pclath, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : B3F/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   435 ;;      Params:         0       0       0       0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0       0       0       0
   438 ;;      Totals:         0       0       0       0       0       0       0       0
   439 ;;Total ram usage:        0 bytes
   440 ;; Hardware stack levels required when called:    1
   441 ;; This function calls:
   442 ;;		_OSCILLATOR_Initialize
   443 ;;		_PIN_MANAGER_Initialize
   444 ;;		_PWM3_Initialize
   445 ;;		_PWM3_LoadDutyValue
   446 ;;		_TMR2_Initialize
   447 ;; This function is called by:
   448 ;;		Startup code after reset
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           
   453                           ;psect for function _main
   454  0764                     _main:
   455  0764                     l829:	
   456                           ;incstack = 0
   457                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   458                           
   459                           
   460                           ;newfile.c: 165:     PIN_MANAGER_Initialize();
   461  0764  3187  2727  3187   	fcall	_PIN_MANAGER_Initialize
   462  0767                     l831:
   463                           
   464                           ;newfile.c: 166:     OSCILLATOR_Initialize();
   465  0767  3186  26E8  3187   	fcall	_OSCILLATOR_Initialize
   466  076A                     l833:
   467                           
   468                           ;newfile.c: 167:     TMR2_Initialize();
   469  076A  3187  2703  3187   	fcall	_TMR2_Initialize
   470  076D                     l835:
   471                           
   472                           ;newfile.c: 168:     PWM3_Initialize();
   473  076D  3186  26F3  3187   	fcall	_PWM3_Initialize
   474  0770                     l837:
   475                           
   476                           ;newfile.c: 171:     if(RC1== 0 && RC0== 1 && RB4==0 ){
   477  0770  0140               	movlb	0	; select bank0
   478  0771  188E               	btfsc	14,1	;volatile
   479  0772  2F74               	goto	u181
   480  0773  2F75               	goto	u180
   481  0774                     u181:
   482  0774  2F89               	goto	l847
   483  0775                     u180:
   484  0775                     l839:
   485  0775  1C0E               	btfss	14,0	;volatile
   486  0776  2F78               	goto	u191
   487  0777  2F79               	goto	u190
   488  0778                     u191:
   489  0778  2F89               	goto	l847
   490  0779                     u190:
   491  0779                     l841:
   492  0779  1A0D               	btfsc	13,4	;volatile
   493  077A  2F7C               	goto	u201
   494  077B  2F7D               	goto	u200
   495  077C                     u201:
   496  077C  2F89               	goto	l847
   497  077D                     u200:
   498  077D                     l843:
   499                           
   500                           ;newfile.c: 175:         RA5=0;
   501  077D  128C               	bcf	12,5	;volatile
   502                           
   503                           ;newfile.c: 176:         RA2=1;
   504  077E  150C               	bsf	12,2	;volatile
   505                           
   506                           ;newfile.c: 177:         RC2=1;
   507  077F  150E               	bsf	14,2	;volatile
   508                           
   509                           ;newfile.c: 178:         RB5=0;
   510  0780  128D               	bcf	13,5	;volatile
   511                           
   512                           ;newfile.c: 179:         RB7=0;
   513  0781  138D               	bcf	13,7	;volatile
   514  0782                     l845:
   515                           
   516                           ;newfile.c: 180:         PWM3_LoadDutyValue(dutyCycle25);
   517  0782  307D               	movlw	125
   518  0783  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   519  0784  3000               	movlw	0
   520  0785  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   521  0786  3187  2711  3187   	fcall	_PWM3_LoadDutyValue
   522  0789                     l847:
   523                           
   524                           ;newfile.c: 185:     if(RC1== 0 && RC0== 1 && RB4==1 ){
   525  0789  0140               	movlb	0	; select bank0
   526  078A  188E               	btfsc	14,1	;volatile
   527  078B  2F8D               	goto	u211
   528  078C  2F8E               	goto	u210
   529  078D                     u211:
   530  078D  2FA2               	goto	l857
   531  078E                     u210:
   532  078E                     l849:
   533  078E  1C0E               	btfss	14,0	;volatile
   534  078F  2F91               	goto	u221
   535  0790  2F92               	goto	u220
   536  0791                     u221:
   537  0791  2FA2               	goto	l857
   538  0792                     u220:
   539  0792                     l851:
   540  0792  1E0D               	btfss	13,4	;volatile
   541  0793  2F95               	goto	u231
   542  0794  2F96               	goto	u230
   543  0795                     u231:
   544  0795  2FA2               	goto	l857
   545  0796                     u230:
   546  0796                     l853:
   547                           
   548                           ;newfile.c: 189:         RA5=0;
   549  0796  128C               	bcf	12,5	;volatile
   550                           
   551                           ;newfile.c: 190:         RA2=1;
   552  0797  150C               	bsf	12,2	;volatile
   553                           
   554                           ;newfile.c: 191:         RC2=0;
   555  0798  110E               	bcf	14,2	;volatile
   556                           
   557                           ;newfile.c: 192:         RB5=1;
   558  0799  168D               	bsf	13,5	;volatile
   559                           
   560                           ;newfile.c: 193:         RB7=1;
   561  079A  178D               	bsf	13,7	;volatile
   562  079B                     l855:
   563                           
   564                           ;newfile.c: 194:         PWM3_LoadDutyValue(dutyCycle25);
   565  079B  307D               	movlw	125
   566  079C  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   567  079D  3000               	movlw	0
   568  079E  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   569  079F  3187  2711  3187   	fcall	_PWM3_LoadDutyValue
   570  07A2                     l857:
   571                           
   572                           ;newfile.c: 199:     if(RC1== 0 && RC0== 0 && RB4==1 ){
   573  07A2  0140               	movlb	0	; select bank0
   574  07A3  188E               	btfsc	14,1	;volatile
   575  07A4  2FA6               	goto	u241
   576  07A5  2FA7               	goto	u240
   577  07A6                     u241:
   578  07A6  2FBB               	goto	l867
   579  07A7                     u240:
   580  07A7                     l859:
   581  07A7  180E               	btfsc	14,0	;volatile
   582  07A8  2FAA               	goto	u251
   583  07A9  2FAB               	goto	u250
   584  07AA                     u251:
   585  07AA  2FBB               	goto	l867
   586  07AB                     u250:
   587  07AB                     l861:
   588  07AB  1E0D               	btfss	13,4	;volatile
   589  07AC  2FAE               	goto	u261
   590  07AD  2FAF               	goto	u260
   591  07AE                     u261:
   592  07AE  2FBB               	goto	l867
   593  07AF                     u260:
   594  07AF                     l863:
   595                           
   596                           ;newfile.c: 203:         RA5=0;
   597  07AF  128C               	bcf	12,5	;volatile
   598                           
   599                           ;newfile.c: 204:         RA2=1;
   600  07B0  150C               	bsf	12,2	;volatile
   601                           
   602                           ;newfile.c: 205:         RC2=0;
   603  07B1  110E               	bcf	14,2	;volatile
   604                           
   605                           ;newfile.c: 206:         RB5=1;
   606  07B2  168D               	bsf	13,5	;volatile
   607                           
   608                           ;newfile.c: 207:         RB7=1;
   609  07B3  178D               	bsf	13,7	;volatile
   610  07B4                     l865:
   611                           
   612                           ;newfile.c: 208:         PWM3_LoadDutyValue(dutyCycle25);
   613  07B4  307D               	movlw	125
   614  07B5  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   615  07B6  3000               	movlw	0
   616  07B7  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   617  07B8  3187  2711  3187   	fcall	_PWM3_LoadDutyValue
   618  07BB                     l867:
   619                           
   620                           ;newfile.c: 213:     if(RC1== 1 && RC0== 1 && RB4==0 ){
   621  07BB  0140               	movlb	0	; select bank0
   622  07BC  1C8E               	btfss	14,1	;volatile
   623  07BD  2FBF               	goto	u271
   624  07BE  2FC0               	goto	u270
   625  07BF                     u271:
   626  07BF  2FD4               	goto	l877
   627  07C0                     u270:
   628  07C0                     l869:
   629  07C0  1C0E               	btfss	14,0	;volatile
   630  07C1  2FC3               	goto	u281
   631  07C2  2FC4               	goto	u280
   632  07C3                     u281:
   633  07C3  2FD4               	goto	l877
   634  07C4                     u280:
   635  07C4                     l871:
   636  07C4  1A0D               	btfsc	13,4	;volatile
   637  07C5  2FC7               	goto	u291
   638  07C6  2FC8               	goto	u290
   639  07C7                     u291:
   640  07C7  2FD4               	goto	l877
   641  07C8                     u290:
   642  07C8                     l873:
   643                           
   644                           ;newfile.c: 217:         RA5=0;
   645  07C8  128C               	bcf	12,5	;volatile
   646                           
   647                           ;newfile.c: 218:         RA2=1;
   648  07C9  150C               	bsf	12,2	;volatile
   649                           
   650                           ;newfile.c: 219:         RC2=1;
   651  07CA  150E               	bsf	14,2	;volatile
   652                           
   653                           ;newfile.c: 220:         RB5=1;
   654  07CB  168D               	bsf	13,5	;volatile
   655                           
   656                           ;newfile.c: 221:         RB7=0;
   657  07CC  138D               	bcf	13,7	;volatile
   658  07CD                     l875:
   659                           
   660                           ;newfile.c: 222:         PWM3_LoadDutyValue(dutyCycle25);
   661  07CD  307D               	movlw	125
   662  07CE  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   663  07CF  3000               	movlw	0
   664  07D0  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   665  07D1  3187  2711  3187   	fcall	_PWM3_LoadDutyValue
   666  07D4                     l877:
   667                           
   668                           ;newfile.c: 226:      if(RC1== 1 && RC0== 0 && RB4==0 ){
   669  07D4  0140               	movlb	0	; select bank0
   670  07D5  1C8E               	btfss	14,1	;volatile
   671  07D6  2FD8               	goto	u301
   672  07D7  2FD9               	goto	u300
   673  07D8                     u301:
   674  07D8  2FED               	goto	l157
   675  07D9                     u300:
   676  07D9                     l879:
   677  07D9  180E               	btfsc	14,0	;volatile
   678  07DA  2FDC               	goto	u311
   679  07DB  2FDD               	goto	u310
   680  07DC                     u311:
   681  07DC  2FED               	goto	l157
   682  07DD                     u310:
   683  07DD                     l881:
   684  07DD  1A0D               	btfsc	13,4	;volatile
   685  07DE  2FE0               	goto	u321
   686  07DF  2FE1               	goto	u320
   687  07E0                     u321:
   688  07E0  2FED               	goto	l157
   689  07E1                     u320:
   690  07E1                     l883:
   691                           
   692                           ;newfile.c: 230:         RA5=0;
   693  07E1  128C               	bcf	12,5	;volatile
   694                           
   695                           ;newfile.c: 231:         RA2=1;
   696  07E2  150C               	bsf	12,2	;volatile
   697                           
   698                           ;newfile.c: 232:         RC2=1;
   699  07E3  150E               	bsf	14,2	;volatile
   700                           
   701                           ;newfile.c: 233:         RB5=1;
   702  07E4  168D               	bsf	13,5	;volatile
   703                           
   704                           ;newfile.c: 234:         RB7=0;
   705  07E5  138D               	bcf	13,7	;volatile
   706  07E6                     l885:
   707                           
   708                           ;newfile.c: 235:         PWM3_LoadDutyValue(dutyCycle25);
   709  07E6  307D               	movlw	125
   710  07E7  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   711  07E8  3000               	movlw	0
   712  07E9  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   713  07EA  3187  2711  3187   	fcall	_PWM3_LoadDutyValue
   714  07ED                     l157:
   715  07ED  3180  2802         	ljmp	start
   716  07EF                     __end_of_main:
   717                           
   718                           	psect	text1
   719  0703                     __ptext1:	
   720 ;; *************** function _TMR2_Initialize *****************
   721 ;; Defined at:
   722 ;;		line 135 in file "newfile.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   736 ;;      Params:         0       0       0       0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0       0       0       0
   739 ;;      Totals:         0       0       0       0       0       0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _TMR2_Initialize
   751  0703                     _TMR2_Initialize:
   752  0703                     l753:	
   753                           ;incstack = 0
   754                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
   755                           
   756                           
   757                           ;newfile.c: 137:     T2CLKCON = 0x01;
   758  0703  3001               	movlw	1
   759  0704  0145               	movlb	5	; select bank5
   760  0705  0090               	movwf	16	;volatile
   761  0706                     l755:
   762                           
   763                           ;newfile.c: 138:     T2HLT = 0x00;
   764  0706  018F               	clrf	15	;volatile
   765  0707                     l757:
   766                           
   767                           ;newfile.c: 139:     T2RST = 0x00;
   768  0707  0191               	clrf	17	;volatile
   769                           
   770                           ;newfile.c: 140:     T2PR = 249;
   771  0708  30F9               	movlw	249
   772  0709  008D               	movwf	13	;volatile
   773  070A                     l759:
   774                           
   775                           ;newfile.c: 141:     T2TMR = 0x00;
   776  070A  018C               	clrf	12	;volatile
   777  070B                     l761:
   778                           
   779                           ;newfile.c: 142:     PIR1bits.TMR2IF = 0;
   780  070B  014E               	movlb	14	; select bank14
   781  070C  130D               	bcf	13,6	;volatile
   782  070D                     l763:
   783                           
   784                           ;newfile.c: 143:     T2CON = 0b10010000;
   785  070D  3090               	movlw	144
   786  070E  0145               	movlb	5	; select bank5
   787  070F  008E               	movwf	14	;volatile
   788  0710                     l141:
   789  0710  0008               	return
   790  0711                     __end_of_TMR2_Initialize:
   791                           
   792                           	psect	text2
   793  0711                     __ptext2:	
   794 ;; *************** function _PWM3_LoadDutyValue *****************
   795 ;; Defined at:
   796 ;;		line 155 in file "newfile.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  dutyValue       2    0[COMMON] unsigned short 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;		None
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   810 ;;      Params:         2       0       0       0       0       0       0       0
   811 ;;      Locals:         0       0       0       0       0       0       0       0
   812 ;;      Temps:          2       0       0       0       0       0       0       0
   813 ;;      Totals:         4       0       0       0       0       0       0       0
   814 ;;Total ram usage:        4 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_main
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function _PWM3_LoadDutyValue
   825  0711                     _PWM3_LoadDutyValue:
   826  0711                     l827:	
   827                           ;incstack = 0
   828                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
   829                           
   830                           
   831                           ;newfile.c: 155:   void PWM3_LoadDutyValue(uint16_t dutyValue);newfile.c: 156:  {;newfil
      +                          e.c: 157:      PWM3DCH = (dutyValue & 0x03FC)>>2;
   832  0711  0879               	movf	PWM3_LoadDutyValue@dutyValue+1,w
   833  0712  00FB               	movwf	??_PWM3_LoadDutyValue+1
   834  0713  0878               	movf	PWM3_LoadDutyValue@dutyValue,w
   835  0714  00FA               	movwf	??_PWM3_LoadDutyValue
   836  0715  36FB               	lsrf	??_PWM3_LoadDutyValue+1,f
   837  0716  0CFA               	rrf	??_PWM3_LoadDutyValue,f
   838  0717  36FB               	lsrf	??_PWM3_LoadDutyValue+1,f
   839  0718  0CFA               	rrf	??_PWM3_LoadDutyValue,f
   840  0719  087A               	movf	??_PWM3_LoadDutyValue,w
   841  071A  0146               	movlb	6	; select bank6
   842  071B  0095               	movwf	21	;volatile
   843                           
   844                           ;newfile.c: 158:      PWM3DCL = (dutyValue & 0x0003)<<6;
   845  071C  0878               	movf	PWM3_LoadDutyValue@dutyValue,w
   846  071D  3903               	andlw	3
   847  071E  00FA               	movwf	??_PWM3_LoadDutyValue
   848  071F  3005               	movlw	5
   849  0720                     u175:
   850  0720  35FA               	lslf	??_PWM3_LoadDutyValue,f
   851  0721  3EFF               	addlw	-1
   852  0722  1D03               	skipz
   853  0723  2F20               	goto	u175
   854  0724  357A               	lslf	??_PWM3_LoadDutyValue,w
   855  0725  0094               	movwf	20	;volatile
   856  0726                     l147:
   857  0726  0008               	return
   858  0727                     __end_of_PWM3_LoadDutyValue:
   859                           
   860                           	psect	text3
   861  06F3                     __ptext3:	
   862 ;; *************** function _PWM3_Initialize *****************
   863 ;; Defined at:
   864 ;;		line 146 in file "newfile.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   878 ;;      Params:         0       0       0       0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _PWM3_Initialize
   893  06F3                     _PWM3_Initialize:
   894  06F3                     l765:	
   895                           ;incstack = 0
   896                           ; Regs used in _PWM3_Initialize: [wreg]
   897                           
   898                           
   899                           ;newfile.c: 148:     PWM3CON = 0x90;
   900  06F3  3090               	movlw	144
   901  06F4  0146               	movlb	6	; select bank6
   902  06F5  0096               	movwf	22	;volatile
   903                           
   904                           ;newfile.c: 149:     PWM3DCH = 0x3E;
   905  06F6  303E               	movlw	62
   906  06F7  0095               	movwf	21	;volatile
   907                           
   908                           ;newfile.c: 150:     PWM3DCL = 0x40;
   909  06F8  3040               	movlw	64
   910  06F9  0094               	movwf	20	;volatile
   911  06FA                     l144:
   912  06FA  0008               	return
   913  06FB                     __end_of_PWM3_Initialize:
   914                           
   915                           	psect	text4
   916  0727                     __ptext4:	
   917 ;; *************** function _PIN_MANAGER_Initialize *****************
   918 ;; Defined at:
   919 ;;		line 65 in file "newfile.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   933 ;;      Params:         0       0       0       0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0       0
   936 ;;      Totals:         0       0       0       0       0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _PIN_MANAGER_Initialize
   948  0727                     _PIN_MANAGER_Initialize:
   949  0727                     l683:	
   950                           ;incstack = 0
   951                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
   952                           
   953                           
   954                           ;newfile.c: 68:     LATA = 0x00;
   955  0727  0140               	movlb	0	; select bank0
   956  0728  0198               	clrf	24	;volatile
   957                           
   958                           ;newfile.c: 69:     LATB = 0x00;
   959  0729  0199               	clrf	25	;volatile
   960                           
   961                           ;newfile.c: 70:     LATC = 0x00;
   962  072A  019A               	clrf	26	;volatile
   963  072B                     l685:
   964                           
   965                           ;newfile.c: 73:     TRISA = 0x3B;
   966  072B  303B               	movlw	59
   967  072C  0092               	movwf	18	;volatile
   968  072D                     l687:
   969                           
   970                           ;newfile.c: 74:     TRISB = 0xF0;
   971  072D  30F0               	movlw	240
   972  072E  0093               	movwf	19	;volatile
   973  072F                     l689:
   974                           
   975                           ;newfile.c: 75:     TRISC = 0xFF;
   976  072F  30FF               	movlw	255
   977  0730  0094               	movwf	20	;volatile
   978  0731                     l691:
   979                           
   980                           ;newfile.c: 78:     ANSELC = 0xFB;
   981  0731  30FB               	movlw	251
   982  0732  017E               	movlb	62	; select bank62
   983  0733  00CE               	movwf	78	;volatile
   984  0734                     l693:
   985                           
   986                           ;newfile.c: 79:     ANSELB = 0xF0;
   987  0734  30F0               	movlw	240
   988  0735  00C3               	movwf	67	;volatile
   989  0736                     l695:
   990                           
   991                           ;newfile.c: 80:     ANSELA = 0x33;
   992  0736  3033               	movlw	51
   993  0737  00B8               	movwf	56	;volatile
   994                           
   995                           ;newfile.c: 83:     WPUB = 0x00;
   996  0738  01C4               	clrf	68	;volatile
   997  0739                     l697:
   998                           
   999                           ;newfile.c: 84:     WPUA = 0x04;
  1000  0739  3004               	movlw	4
  1001  073A  00B9               	movwf	57	;volatile
  1002  073B                     l699:
  1003                           
  1004                           ;newfile.c: 85:     WPUC = 0x04;
  1005  073B  3004               	movlw	4
  1006  073C  00CF               	movwf	79	;volatile
  1007                           
  1008                           ;newfile.c: 88:     ODCONA = 0x00;
  1009  073D  01BA               	clrf	58	;volatile
  1010                           
  1011                           ;newfile.c: 89:     ODCONB = 0x00;
  1012  073E  01C5               	clrf	69	;volatile
  1013                           
  1014                           ;newfile.c: 90:     ODCONC = 0x00;
  1015  073F  01D0               	clrf	80	;volatile
  1016  0740                     l701:
  1017                           
  1018                           ;newfile.c: 93:     SLRCONA = 0x37;
  1019  0740  3037               	movlw	55
  1020  0741  00BB               	movwf	59	;volatile
  1021  0742                     l703:
  1022                           
  1023                           ;newfile.c: 94:     SLRCONB = 0xF0;
  1024  0742  30F0               	movlw	240
  1025  0743  00C6               	movwf	70	;volatile
  1026  0744                     l705:
  1027                           
  1028                           ;newfile.c: 95:     SLRCONC = 0xFF;
  1029  0744  30FF               	movlw	255
  1030  0745  00D1               	movwf	81	;volatile
  1031  0746                     l707:
  1032                           
  1033                           ;newfile.c: 98:     INLVLA = 0x3F;
  1034  0746  303F               	movlw	63
  1035  0747  00BC               	movwf	60	;volatile
  1036  0748                     l709:
  1037                           
  1038                           ;newfile.c: 99:     INLVLB = 0xF0;
  1039  0748  30F0               	movlw	240
  1040  0749  00C7               	movwf	71	;volatile
  1041  074A                     l711:
  1042                           
  1043                           ;newfile.c: 100:     INLVLC = 0xFF;
  1044  074A  30FF               	movlw	255
  1045  074B  00D2               	movwf	82	;volatile
  1046  074C                     l713:
  1047                           
  1048                           ;newfile.c: 103:     TRISA1 = 0;
  1049  074C  0140               	movlb	0	; select bank0
  1050  074D  1092               	bcf	18,1	;volatile
  1051  074E                     l715:
  1052                           
  1053                           ;newfile.c: 104:     TRISC3 = 0;
  1054  074E  1194               	bcf	20,3	;volatile
  1055  074F                     l717:
  1056                           
  1057                           ;newfile.c: 105:     TRISA2 = 0;
  1058  074F  1112               	bcf	18,2	;volatile
  1059  0750                     l719:
  1060                           
  1061                           ;newfile.c: 106:     TRISA4 = 0;
  1062  0750  1212               	bcf	18,4	;volatile
  1063  0751                     l721:
  1064                           
  1065                           ;newfile.c: 107:     TRISA5 = 0;
  1066  0751  1292               	bcf	18,5	;volatile
  1067  0752                     l723:
  1068                           
  1069                           ;newfile.c: 108:     TRISC2 = 0;
  1070  0752  1114               	bcf	20,2	;volatile
  1071  0753                     l725:
  1072                           
  1073                           ;newfile.c: 109:     TRISB5 = 0;
  1074  0753  1293               	bcf	19,5	;volatile
  1075  0754                     l727:
  1076                           
  1077                           ;newfile.c: 110:     TRISB7 = 0;
  1078  0754  1393               	bcf	19,7	;volatile
  1079  0755                     l729:
  1080                           
  1081                           ;newfile.c: 111:     TRISC0 = 1;
  1082  0755  1414               	bsf	20,0	;volatile
  1083  0756                     l731:
  1084                           
  1085                           ;newfile.c: 112:     TRISC1 = 1;
  1086  0756  1494               	bsf	20,1	;volatile
  1087  0757                     l733:
  1088                           
  1089                           ;newfile.c: 113:     TRISC4 = 1;
  1090  0757  1614               	bsf	20,4	;volatile
  1091  0758                     l735:
  1092                           
  1093                           ;newfile.c: 114:     TRISC5 = 1;
  1094  0758  1694               	bsf	20,5	;volatile
  1095  0759                     l737:
  1096                           
  1097                           ;newfile.c: 115:     TRISC6 = 1;
  1098  0759  1714               	bsf	20,6	;volatile
  1099  075A                     l739:
  1100                           
  1101                           ;newfile.c: 116:     TRISC7 = 1;
  1102  075A  1794               	bsf	20,7	;volatile
  1103  075B                     l741:
  1104                           
  1105                           ;newfile.c: 117:     TRISB4 = 1;
  1106  075B  1613               	bsf	19,4	;volatile
  1107  075C                     l743:
  1108                           
  1109                           ;newfile.c: 118:     TRISB6 = 1;
  1110  075C  1713               	bsf	19,6	;volatile
  1111  075D                     l745:
  1112                           
  1113                           ;newfile.c: 119:     WPUC2 = 1;
  1114  075D  017E               	movlb	62	; select bank62
  1115  075E  154F               	bsf	79,2	;volatile
  1116  075F                     l747:
  1117                           
  1118                           ;newfile.c: 122:     RA1PPS = 0x03;
  1119  075F  3003               	movlw	3
  1120  0760  0091               	movwf	17	;volatile
  1121  0761                     l749:
  1122                           
  1123                           ;newfile.c: 123:     RC3PPS = 0x03;
  1124  0761  3003               	movlw	3
  1125  0762  00A3               	movwf	35	;volatile
  1126  0763                     l135:
  1127  0763  0008               	return
  1128  0764                     __end_of_PIN_MANAGER_Initialize:
  1129                           
  1130                           	psect	text5
  1131  06E8                     __ptext5:	
  1132 ;; *************** function _OSCILLATOR_Initialize *****************
  1133 ;; Defined at:
  1134 ;;		line 128 in file "newfile.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		status,2
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1148 ;;      Params:         0       0       0       0       0       0       0       0
  1149 ;;      Locals:         0       0       0       0       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0       0
  1151 ;;      Totals:         0       0       0       0       0       0       0       0
  1152 ;;Total ram usage:        0 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; This function calls:
  1155 ;;		Nothing
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           
  1162                           ;psect for function _OSCILLATOR_Initialize
  1163  06E8                     _OSCILLATOR_Initialize:
  1164  06E8                     l751:	
  1165                           ;incstack = 0
  1166                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  1167                           
  1168                           
  1169                           ;newfile.c: 130:     OSCEN = 0x00;
  1170  06E8  0151               	movlb	17	; select bank17
  1171  06E9  0191               	clrf	17	;volatile
  1172                           
  1173                           ;newfile.c: 131:     OSCFRQ = 0x00;
  1174  06EA  0193               	clrf	19	;volatile
  1175                           
  1176                           ;newfile.c: 132:     OSCTUNE = 0x00;
  1177  06EB  0192               	clrf	18	;volatile
  1178  06EC                     l138:
  1179  06EC  0008               	return
  1180  06ED                     __end_of_OSCILLATOR_Initialize:
  1181  007E                     btemp	set	126	;btemp
  1182  007E                     wtemp0	set	126
  1183                           
  1184                           	psect	config
  1185                           
  1186                           ;Config register CONFIG1 @ 0x8007
  1187                           ;	External Oscillator Mode Selection bits
  1188                           ;	FEXTOSC = OFF, Oscillator not enabled
  1189                           ;	Power-up Default Value for COSC bits
  1190                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  1191                           ;	Clock Out Enable bit
  1192                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  1193                           ;	VDD Range Analog Calibration Selection bit
  1194                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  1195  8007                     	org	32775
  1196  8007  3FED               	dw	16365
  1197                           
  1198                           ;Config register CONFIG2 @ 0x8008
  1199                           ;	Master Clear Enable bit
  1200                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  1201                           ;	Power-up Timer Selection bits
  1202                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1203                           ;	WDT Operating Mode bits
  1204                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  1205                           ;	Brown-out Reset Enable bits
  1206                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  1207                           ;	Brown-out Reset Voltage Selection bit
  1208                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  1209                           ;	PPSLOCKED One-Way Set Enable bit
  1210                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  1211                           ;	Stack Overflow/Underflow Reset Enable bit
  1212                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  1213  8008                     	org	32776
  1214  8008  3FE7               	dw	16359
  1215                           
  1216                           ;Config register CONFIG4 @ 0x800A
  1217                           ;	Boot Block Size Selection bits
  1218                           ;	BBSIZE = BB512, 512 words boot block size
  1219                           ;	Boot Block Enable bit
  1220                           ;	BBEN = OFF, Boot Block is disabled
  1221                           ;	SAF Enable bit
  1222                           ;	SAFEN = OFF, SAF is disabled
  1223                           ;	Application Block Write Protection bit
  1224                           ;	WRTAPP = OFF, Application Block is not write-protected
  1225                           ;	Boot Block Write Protection bit
  1226                           ;	WRTB = OFF, Boot Block is not write-protected
  1227                           ;	Configuration Registers Write Protection bit
  1228                           ;	WRTC = OFF, Configuration Registers are not write-protected
  1229                           ;	Storage Area Flash (SAF) Write Protection bit
  1230                           ;	WRTSAF = OFF, SAF is not write-protected
  1231                           ;	Low Voltage Programming Enable bit
  1232                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  1233  800A                     	org	32778
  1234  800A  3FFF               	dw	16383
  1235                           
  1236                           ;Config register CONFIG5 @ 0x800B
  1237                           ;	User Program Flash Memory Code Protection bit
  1238                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  1239  800B                     	org	32779
  1240  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM3_LoadDutyValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     424
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                 _PWM3_LoadDutyValue
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     424
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OSCILLATOR_Initialize
   _PIN_MANAGER_Initialize
   _PWM3_Initialize
   _PWM3_LoadDutyValue
   _TMR2_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       E      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri May 21 18:59:30 2021

                            l141 0710                              l135 0763                              l144 06FA  
                            l138 06EC                              l147 0726                              l157 07ED  
                            l701 0740                              l711 074A                              l703 0742  
                            l721 0751                              l713 074C                              l705 0744  
                            l731 0756                              l723 0752                              l715 074E  
                            l707 0746                              l741 075B                              l733 0757  
                            l725 0753                              l717 074F                              l709 0748  
                            l751 06E8                              l743 075C                              l735 0758  
                            l727 0754                              l719 0750                              l831 0767  
                            l745 075D                              l737 0759                              l729 0755  
                            l761 070B                              l753 0703                              l841 0779  
                            l833 076A                              l747 075F                              l739 075A  
                            l691 0731                              l683 0727                              l827 0711  
                            l763 070D                              l755 0706                              l851 0792  
                            l843 077D                              l835 076D                              l749 0761  
                            l693 0734                              l685 072B                              l765 06F3  
                            l757 0707                              l861 07AB                              l853 0796  
                            l845 0782                              l837 0770                              l829 0764  
                            l695 0736                              l687 072D                              l759 070A  
                            l871 07C4                              l863 07AF                              l855 079B  
                            l839 0775                              l847 0789                              l697 0739  
                            l689 072F                              l881 07DD                              l873 07C8  
                            l865 07B4                              l849 078E                              l857 07A2  
                            l699 073B                              l883 07E1                              l875 07CD  
                            l859 07A7                              l867 07BB                              l885 07E6  
                            l869 07C0                              l877 07D4                              l879 07D9  
                            _RA2 0062                              _RC0 0070                              _RC1 0071  
                            _RA5 0065                              _RB4 006C                              _RC2 0072  
                            _RB5 006D                              _RB7 006F                              u200 077D  
                            u201 077C                              u210 078E                              u211 078D  
                            u300 07D9                              u220 0792                              u301 07D8  
                            u221 0791                              u310 07DD                              u230 0796  
                            u311 07DC                              u231 0795                              u320 07E1  
                            u240 07A7                              u321 07E0                              u241 07A6  
                            u250 07AB                              u251 07AA                              u260 07AF  
                            u180 0775                              u261 07AE                              u181 0774  
                            u270 07C0                              u190 0779                              u175 0720  
                            u271 07BF                              u191 0778                              u280 07C4  
                            u281 07C3                              u290 07C8                              u291 07C7  
                _TMR2_Initialize 0703                             _LATA 0018                             _LATB 0019  
                           _LATC 001A                             _T2PR 028D                             _WPUA 1F39  
                           _WPUB 1F44                             _WPUC 1F4F                             _main 0764  
                           fsr0h 0005                             fsr1h 0007                             fsr0l 0004  
                           fsr1l 0006                             btemp 007E                             start 0002  
 __size_of_OSCILLATOR_Initialize 0005    __end_of_OSCILLATOR_Initialize 06ED                            ?_main 0078  
                          _T2CON 028E                            _T2HLT 028F                            _T2TMR 028C  
                          _T2RST 0291                            _OSCEN 0891                            _TRISA 0012  
                          _TRISB 0013                            _TRISC 0014                            _WPUC2 FA7A  
        __end_of_PWM3_Initialize 06FB                            wtemp0 007E                  __initialization 07EF  
                   __end_of_main 07EF          __end_of_TMR2_Initialize 0711                           ??_main 007C  
                         _ANSELA 1F38                           _ANSELB 1F43                           _ANSELC 1F4E  
                         _RA1PPS 1F11                           _RC3PPS 1F23                           _ODCONA 1F3A  
                         _ODCONB 1F45                           _ODCONC 1F50                           _INLVLA 1F3C  
                         _INLVLB 1F47                           _INLVLC 1F52                           _OSCFRQ 0893  
                         _TRISA1 0091                           _TRISA2 0092                           _TRISA4 0094  
                         _TRISC0 00A0                           _TRISA5 0095                           _TRISC1 00A1  
                         _TRISC2 00A2                           _TRISB4 009C                           _TRISC3 00A3  
                         _TRISB5 009D                           _TRISC4 00A4                           _TRISB6 009E  
                         _TRISB7 009F                           _TRISC5 00A5                           _TRISC6 00A6  
                         _TRISC7 00A7      __size_of_PWM3_LoadDutyValue 0016                     __pdataCOMMON 0070  
               ?_PWM3_Initialize 0078          __end_of__initialization 07FD                   __pcstackCOMMON 0078  
               ?_TMR2_Initialize 0078                       __pmaintext 0764                          _OSCTUNE 0892  
                        _PWM3DCH 0315                          _PWM3DCL 0314                          _PWM3CON 0316  
                        _SLRCONA 1F3B                          _SLRCONB 1F46                          _SLRCONC 1F51  
                     _dutyCycle0 007C                          __ptext1 0703                          __ptext2 0711  
                        __ptext3 06F3                          __ptext4 0727                          __ptext5 06E8  
          _OSCILLATOR_Initialize 06E8         ??_PIN_MANAGER_Initialize 0078             end_of_initialization 07FD  
                        init_ram 06ED                          initloop 06EE       __end_of_PWM3_LoadDutyValue 0727  
                  __pidataCOMMON 06FB           ?_OSCILLATOR_Initialize 0078              start_initialization 07EF  
__size_of_PIN_MANAGER_Initialize 003D         __size_of_PWM3_Initialize 0008                      __pbssCOMMON 007C  
                      ___latbits 0001         __size_of_TMR2_Initialize 000E                     _dutyCycle100 0070  
         _PIN_MANAGER_Initialize 0727                         _T2CLKCON 0290                         _PIR1bits 070D  
              ??_PWM3_Initialize 0078                ??_TMR2_Initialize 0078          ??_OSCILLATOR_Initialize 0078  
             _PWM3_LoadDutyValue 0711                      _dutyCycle25 0076                      _dutyCycle50 0074  
                    _dutyCycle75 0072              ?_PWM3_LoadDutyValue 0078                    __size_of_main 008B  
           ??_PWM3_LoadDutyValue 007A          ?_PIN_MANAGER_Initialize 0078      PWM3_LoadDutyValue@dutyValue 0078  
 __end_of_PIN_MANAGER_Initialize 0764                  _PWM3_Initialize 06F3  
